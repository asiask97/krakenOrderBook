{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA,SAAS,0BAAI,CAAC,IAAI,EAAE;IAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;CACnB;AAED,0BAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE;IACrC,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;CACvC,CAAC;AAEF,0BAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;IAC1C,IAAG,GAAG,EACF,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAGjB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;CAEvB,CAAC;AAEF,SAAS,4BAAM,CAAC,UAAU,EAAE;IACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAC9B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;CACjB;AAED,4BAAM,CAAC,SAAS,GAAG,IAAI,MAAQ,EAAE,CAAC;AAElC,+CAA+C;AAC/C,4BAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE;IACrC,IAAI,GAAG,GAAG,KAAK,AAAC;IAEhB,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;QACpB,aAAa;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,0BAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,GAAG,GAAG,IAAI,CAAC;QACX,IAAI,CAAC,IAAI,EAAE,CAAC;KACf,MACI;QACD,IAAI,IAAI,GAAG,IAAI,0BAAI,CAAC,SAAS,CAAC,AAAC,EAAC,iBAAiB;QAEjD,IAAI,GAAG,GAAG,CAAC,AAAC;QACZ,IAAI,IAAI,GAAG,CAAC,AAAC;QAEb,QAAQ;QACR,IAAI,EAAE,GAAG,IAAI,AAAC,EAAC,cAAc;QAC7B,IAAI,GAAG,GAAG,IAAI,AAAC,EAAC,qBAAqB;QACrC,IAAI,CAAC,GAAG,IAAI,AAAC,EAAC,SAAS;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,AAAC;QACtB,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,cAAc;QACd,MAAM,IAAI,CAAE;YACR,IAAG,IAAI,KAAK,IAAI,EAAE;gBACd,gCAAgC;gBAChC,IAAI,GAAG,IAAI,0BAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACvB,GAAG,GAAG,IAAI,CAAC;gBACX,IAAI,CAAC,IAAI,EAAE,CAAC;aACf,MACI,IAAG,4BAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,4BAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC7C,aAAa;gBACb,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;aAC1B;YAED,oBAAoB;YACpB,IAAG,4BAAM,CAAC,IAAI,CAAC,IAAI,4BAAM,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,KAAK,EAAE,AAAC;gBAE5B,IAAG,IAAI,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EACzB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,mCAAa,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;qBAG9C,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,mCAAa,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;aAErD;YAED,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,AAAC;YAE5C,gBAAgB;YAChB,IAAG,GAAG,KAAK,CAAC,EACR,MAAM;YAGV,IAAI,GAAG,GAAG,CAAC;YACX,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAEd,iBAAiB;YACjB,IAAG,EAAE,KAAK,IAAI,EACV,GAAG,GAAG,EAAE,CAAC;YAEb,EAAE,GAAG,CAAC,CAAC;YACP,CAAC,GAAG,IAAI,CAAC;YACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,cAAc;QACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;KAC3B;IAED,kBAAkB;IAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAEvB,OAAO,GAAG,CAAC;CACd,CAAC;AAEF,8CAA8C;AAC9C,4BAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE;IACrC,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAClB,OAAO,KAAK,CAAC;IAGjB,IAAI,IAAI,GAAG,IAAI,0BAAI,CAAC,SAAS,CAAC,AAAC,EAAC,iBAAiB;IACjD,IAAI,IAAI,GAAG,IAAI,AAAC;IAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACxB,IAAI,CAAC,GAAG,IAAI,AAAC,EAAC,SAAS;IACvB,IAAI,EAAE,GAAG,IAAI,AAAC,EAAC,eAAe;IAC9B,IAAI,KAAK,GAAG,IAAI,AAAC,EAAC,aAAa;IAC/B,IAAI,GAAG,GAAG,CAAC,AAAC;IAEZ,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,CAAE;QAChC,IAAI,IAAI,GAAG,GAAG,AAAC;QAEf,iBAAiB;QACjB,EAAE,GAAG,CAAC,CAAC;QACP,CAAC,GAAG,IAAI,CAAC;QACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAE3B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,AAAC;QAE5C,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QAEd,kBAAkB;QAClB,IAAG,GAAG,KAAK,CAAC,EACR,KAAK,GAAG,IAAI,CAAC;QAGjB,yBAAyB;QACzB,IAAG,CAAC,4BAAM,CAAC,IAAI,CAAC,IAAI,CAAC,4BAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;YAC9C,IAAG,4BAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC7B,IAAI,EAAE,GAAG,mCAAa,CAAC,IAAI,EAAE,GAAG,CAAC,AAAC;gBAClC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACtB,CAAC,GAAG,EAAE,CAAC;aACV,MACI,IAAG,CAAC,4BAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;gBACnC,IAAI,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,AAAC;gBACjC,IAAG,OAAO,KAAK,IAAI;oBACf,IAAG,CAAC,4BAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,4BAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;wBACtE,aAAa;wBACb,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;wBACd,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC;wBACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;qBACnB,MACI;wBACD,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,KAAK,CAAC,AAAC;wBAE1B,IAAG,4BAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAC9B,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,mCAAa,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;6BAE1C,IAAG,4BAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EACpC,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,mCAAa,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;wBAG/C,0BAA0B;wBAC1B,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,AAAC;wBAC7B,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;wBACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;wBAChB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;wBACrB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;qBACzB;iBACJ;aACJ;SACJ;KACJ;IAED,8BAA8B;IAC9B,IAAG,KAAK,KAAK,IAAI,EAAE;QACf,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IAED,gCAAgC;IAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACxB,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAG3B,OAAO,KAAK,KAAK,IAAI,CAAC;CACzB,CAAC;AAEF,SAAS,4BAAM,CAAC,IAAI,EAAE;IAClB,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;CACpC;AAED,SAAS,mCAAa,CAAC,IAAI,EAAE,GAAG,EAAE;IAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,AAAC;IAEhC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAE1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IAEjB,OAAO,IAAI,CAAC;CACf;AAED,SAAS,mCAAa,CAAC,IAAI,EAAE,GAAG,EAAE;IAC9B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,mCAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,OAAO,mCAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CACnC;AAED,cAAc,GAAG,4BAAM,CAAC;;;;ACxNxB,SAAS,8BAAQ,GAAG,EAAE;AAEtB,kCAAkC;AAClC,8BAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW;IAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;CACjB,CAAC;AAEF,6CAA6C;AAC7C,8BAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE;IACrC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,AAAC;IAErB,MAAM,GAAG,KAAK,IAAI,CAAE;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,AAAC;QACzC,IAAG,CAAC,KAAK,CAAC,EACN,OAAO,GAAG,CAAC,IAAI,CAAC;aAGhB,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAElC;IAED,OAAO,IAAI,CAAC;CACf,CAAC;AAEF,oDAAoD;AACpD,8BAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE;IACzC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,AAAC;IACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,AAAC;IAE3B,MAAM,GAAG,KAAK,IAAI,CAAE;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,AAAC;QACzC,IAAG,CAAC,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,OAAO,IAAI,CAAC;SACf,MACI;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9B;KACJ;IAED,OAAO,IAAI,CAAC;CACf,CAAC;AAEF,wEAAwE;AACxE,8BAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,IAAI,EAAE;IAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,AAAC;IACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,AAAC;IAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,AAAC;IAE3B,MAAM,GAAG,KAAK,IAAI,CAAE;QAChB,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,AAAC;QAC5B,IAAG,CAAC,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9B;IAED,IAAI,IAAI,CAAC,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAE;QAC/C,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACzB,IAAG,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;KACJ;IAED,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,OAAO,IAAI,CAAC;CACf,CAAC;AAEF,kEAAkE;AAClE,8BAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,IAAI,EAAE;IAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;IACjC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,AAAC;IAE3B,MAAM,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CACtD,IAAI,CAAC,IAAI,EAAE,CAAC;IAGhB,OAAO,IAAI,CAAC;CACf,CAAC;AAEF,gCAAgC;AAChC,8BAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAChC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,AAAC;IACrB,IAAG,GAAG,KAAK,IAAI,EACX,OAAO,IAAI,CAAC;IAGhB,MAAM,GAAG,CAAC,IAAI,KAAK,IAAI,CACnB,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;IAGnB,OAAO,GAAG,CAAC,IAAI,CAAC;CACnB,CAAC;AAEF,gCAAgC;AAChC,8BAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAChC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,AAAC;IACrB,IAAG,GAAG,KAAK,IAAI,EACX,OAAO,IAAI,CAAC;IAGhB,MAAM,GAAG,CAAC,KAAK,KAAK,IAAI,CACpB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;IAGpB,OAAO,GAAG,CAAC,IAAI,CAAC;CACnB,CAAC;AAEF,0BAA0B;AAC1B,+CAA+C;AAC/C,8BAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;IACrC,OAAO,IAAI,8BAAQ,CAAC,IAAI,CAAC,CAAC;CAC7B,CAAC;AAEF,yCAAyC;AACzC,8BAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,EAAE,EAAE;IACnC,IAAI,EAAE,GAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,AAAC;IAC7B,MAAM,AAAC,CAAA,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,KAAM,IAAI,CAAE;QAC/B,IAAG,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,EACjB,OAAO;KAEd;CACJ,CAAC;AAEF,iDAAiD;AACjD,8BAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,EAAE,EAAE;IACpC,IAAI,EAAE,GAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,AAAC;IAC7B,MAAM,AAAC,CAAA,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,KAAM,IAAI,CAAE;QAC/B,IAAG,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,EACjB,OAAO;KAEd;CACJ,CAAC;AAGF,SAAS,8BAAQ,CAAC,IAAI,EAAE;IACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;CACvB;AAED,8BAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACjC,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;CAC3D,CAAC;AAEF,uCAAuC;AACvC,+BAA+B;AAC/B,8BAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACjC,IAAG,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;QAC5B,IAAG,IAAI,KAAK,IAAI,EACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAE3B,MAEG,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;QAC5B,8CAA8C;QAC9C,sDAAsD;QACtD,IAAI,IAAI,AAAC;QACT,GAAG;YACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;YACpB,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;iBAEpC;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,MAAM;aACT;SACJ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;KACxC,MACI;QACD,qCAAqC;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACrC;IAEL,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;CAC3D,CAAC;AAEF,sCAAsC;AACtC,mCAAmC;AACnC,8BAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACjC,IAAG,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;QAC5B,IAAG,IAAI,KAAK,IAAI,EACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAE3B,MAEG,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;QAC3B,IAAI,IAAI,AAAC;QACT,GAAG;YACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;YACpB,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;iBAEpC;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,MAAM;aACT;SACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;KACvC,MACI;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpC;IAEL,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;CAC3D,CAAC;AAEF,8BAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,KAAK,EAAE;IAC1C,MAAM,KAAK,CAAC,IAAI,KAAK,IAAI,CAAE;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;KACtB;IACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;CACxB,CAAC;AAEF,8BAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,KAAK,EAAE;IAC1C,MAAM,KAAK,CAAC,KAAK,KAAK,IAAI,CAAE;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;KACvB;IACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;CACxB,CAAC;AAEF,cAAc,GAAG,8BAAQ,CAAC;;;;;;;ACxO1B;AAEA,SAAS,0BAAI,CAAC,IAAI,EAAE;IAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACrB;AAED,0BAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE;IACrC,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;CACvC,CAAC;AAEF,0BAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;IAC1C,IAAG,GAAG,EACF,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAGjB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;CAEvB,CAAC;AAEF,SAAS,6BAAO,CAAC,UAAU,EAAE;IACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAC9B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;CACjB;AAED,6BAAO,CAAC,SAAS,GAAG,IAAI,MAAQ,EAAE,CAAC;AAEnC,+CAA+C;AAC/C,6BAAO,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE;IACtC,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;QACpB,aAAa;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,0BAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;KACf;IAED,IAAI,GAAG,GAAG,CAAC,AAAC;IAEZ,QAAQ;IACR,IAAI,CAAC,GAAG,IAAI,AAAC,EAAC,SAAS;IACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,AAAC;IAEtB,cAAc;IACd,MAAM,IAAI,CAAE;QACR,IAAG,IAAI,KAAK,IAAI,EAAE;YACd,gCAAgC;YAChC,IAAI,GAAG,IAAI,0BAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACvB,GAAG,GAAG,IAAI,CAAC;YACX,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;SACf;QAED,gBAAgB;QAChB,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EACtC,OAAO,KAAK,CAAC;QAGjB,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE5C,iBAAiB;QACjB,CAAC,GAAG,IAAI,CAAC;QACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC9B;CACJ,CAAC;AAEF,8CAA8C;AAC9C,6BAAO,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE;IACtC,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAClB,OAAO,KAAK,CAAC;IAGjB,IAAI,IAAI,GAAG,IAAI,0BAAI,CAAC,SAAS,CAAC,AAAC,EAAC,iBAAiB;IACjD,IAAI,IAAI,GAAG,IAAI,AAAC;IAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACxB,IAAI,CAAC,GAAG,IAAI,AAAC,EAAC,SAAS;IACvB,IAAI,KAAK,GAAG,IAAI,AAAC,EAAC,aAAa;IAC/B,IAAI,GAAG,GAAG,CAAC,AAAC;IAEZ,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,CAAE;QAChC,CAAC,GAAG,IAAI,CAAC;QACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,AAAC;QAC5C,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QAEd,IAAG,GAAG,KAAK,CAAC,EACR,KAAK,GAAG,IAAI,CAAC;KAEpB;IAED,IAAG,KAAK,KAAK,IAAI,EAAE;QACf,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;KACf,MAEG,OAAO,KAAK,CAAC;CAEpB,CAAC;AAEF,cAAc,GAAG,6BAAO,CAAC;;;;;AE1GzB;;AAAA,yBAAc,GAAG;IACb,MAAM,EAAE,wBAAuB;IAC/B,OAAO,EAAE,wBAAwB;CACpC,CAAC;;ADDF;oCAAI,gCAAgC;AACpC,+BAA+B;AAE/B,WAAW;AACX,EAAE,GAAG,IAAI,SAAS,CAAC,gCAAgC,CAAC;AACpD,MAAM,gCAAU,GAAG,WAAW;AAC9B,IAAI,2BAAK,AAAC;AACV,MAAM,2BAAK,GAAG,EAAE,AAAC;AACjB,MAAM,+BAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,AAAC;AACvD,MAAM,+BAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,AAAC;AAEvD,IAAI,0BAAI,GAAI,kCAAQ,SAAS,CAAC,EAAE,CAAC,EAAE;IAAE,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;CAAE,CAAC,AAAC;AAC9D,IAAI,0BAAI,GAAI,kCAAQ,SAAS,CAAC,EAAE,CAAC,EAAE;IAAE,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;CAAE,CAAC,AAAC;AAE9D,UAAU;AACV,EAAE,CAAC,MAAM,GAAG,IAAM;IACd,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,UAAU,CAAC,WAAU;QACjB,IAAI,kBAAkB,GAAG;YACrB,OAAO,EAAE,WAAW;YACpB,MAAM,EAAE,MAAM;YACd,aAAa,EAAE;gBAAC,gCAAU;aAAC;SAC9B;QACD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;IAC3C,iDAAiD;KACpD,EAAE,IAAI,CAAC,CAAC;CAEZ;AAED,cAAc;AACd,EAAE,CAAC,SAAS,GAAG,CAAC,OAAO,GAAK;IACxB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;IACnC,mBAAmB;IACnB,gCAAgC;IAChC,sBAAsB;IACtB,IAAI,CAAC,IAAI,CAAC,KAAK;QAEX,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,eAAe,EAAE;YAC3C,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;YACrC,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;YAErC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,GAAI;gBACxB,IAAI,MAAK,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,0BAAI,CAAC,MAAM,CAAC;oBAAC,GAAG,EAAC,MAAK;oBAAE,KAAK,EAAC,GAAG;iBAAC,CAAC;aACtC,CAAC;YAEF,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,GAAI;gBACxB,IAAI,MAAK,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,0BAAI,CAAC,MAAM,CAAC;oBAAC,GAAG,EAAC,MAAK;oBAAE,KAAK,EAAC,GAAG;iBAAC,CAAC;aACtC,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,0BAA0B;YAE1B,IAAG,CAAC,2BAAK,EAAC;gBACN,iCAAW,EAAE;gBACb,iCAAW,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;aAClC;SAEJ,MAAM;YACH,IAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAChC,iCAAW,CAAC,0BAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YAElC,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAC/B,iCAAW,CAAC,0BAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAEtC;KACJ;CACJ;AAID,qBAAqB;AACrB,SAAS,iCAAW,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAEpC,mBAAmB;IACnB,iCAAiC;IACjC,sGAAsG;IAEtG,IAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAC3B,IAAI,CAAC,MAAM,CAAC;QAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAAC,CAAC,CAAC;SACrD;QACD,aAAa;QACb,eAAe;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC;QACjE,IAAG,OAAO,EAAC;YACP,IAAI,CAAC,MAAM,CAAC;gBAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAAC,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC;gBAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,KAAK,EAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAAC,CAAC;SACnG,MACG,uCAAuC;QACvC,IAAI,CAAC,MAAM,CAAC;YAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAAE,KAAK,EAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC;IAGpG,yBAAyB;KAC5B;IAED,0BAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AAEhB,0DAA0D;CAG7D;AACD,IAAI,2BAAK,GAAG,EAAE;AACd,IAAI,4BAAM,GAAG,EAAE;AACf,IAAI,oCAAc,GAAG,EAAE;AACvB,IAAI,qCAAe,GAAG,EAAE;AACxB,SAAS,0BAAI,CAAC,IAAI,EAAE,IAAI,EAAC;IAEtB,mCAAmC;IAGlC,2BAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACjB,oCAAc,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,4BAAM,CAAC,MAAM,GAAG,CAAC;IACjB,qCAAe,CAAC,MAAM,GAAI,CAAC,CAAC;IAC5B,IAAI,GAAG,GAAG,CAAC,AAAC;IACZ,IAAG,IAAI,IAAI,KAAK,EAAC;QACb,IAAI,EAAE,GAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,AAAC;QAC7B,MAAM,AAAC,CAAA,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,KAAM,IAAI,CAAE;YAC/B,2BAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,4BAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACvB,GAAG,EAAE,CAAC;YACN,IAAG,GAAG,IAAI,2BAAK,EACX,MAAM;SAEb;KACJ,MAAI;QACD,IAAI,EAAE,GAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,AAAC;QAC7B,MAAM,AAAC,CAAA,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,KAAM,IAAI,CAAE;YAC/B,2BAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,4BAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACvB,GAAG,EAAE,CAAC;YACN,IAAG,GAAG,IAAI,2BAAK,EACX,MAAM;SAEb;KACJ;IACD,4BAA4B;IAE5B,IAAI,KAAK,GAAG,2BAAK,CAAC,CAAC,CAAC,AAAC;IACrB,oCAAc,CAAC,IAAI,CAAC,2BAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,qCAAe,CAAC,IAAI,CAAC,4BAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,2BAAK,EAAE,CAAC,EAAE,CAAE;QAC5B,IAAG,IAAI,IAAI,KAAK,EACZ,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;aAGrB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;QAGzB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK;QACvC,IAAI,KAAK,GAAG,KAAK;QACjB,qBAAqB;QACtB;;;WAGI,CACH,IAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAI,2BAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAC/B,IAAG,KAAK,IAAI,2BAAK,CAAC,CAAC,CAAC,EAAC;YACjB,oCAAc,CAAC,IAAI,CAAC,2BAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,qCAAe,CAAC,IAAI,CAAC,4BAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,KAAK,GAAG,IAAI;SACf;QAEL,IAAG,CAAC,KAAK,EAAC;YACN,oCAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,qCAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,8CAA8C;IAC9C,IAAG,IAAI,IAAI,KAAK,EAAE,qCAAe,EAAE;SAC9B,IAAG,IAAI,IAAI,KAAK,EACjB,6DAA6D;IAC7D,qCAAe,EAAE;CAExB;AAED,SAAS,qCAAe,GAAE;IACtB,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,oCAAc,CAAC;IACvC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,qCAAe,CAAC;IAClD,SAAS,CAAC,MAAM,EAAE;AAClB,uBAAuB;CAC1B;AACD,SAAS,qCAAe,GAAE;IACtB,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,oCAAc,CAAC;IACvC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,qCAAe,CAAC;IAClD,SAAS,CAAC,MAAM,EAAE;CACrB;AAGD,SAAS,iCAAW,GAAE;IAClB,0BAAI,CAAC,0BAAI,EAAE,MAAM,CAAC;IAClB,SAAS,GAAG,IAAI,KAAK,CAAC,+BAAS,EAAE;QAC7B,IAAI,EAAE,KAAK;QACX,IAAI,EAAE;YACF,MAAM,EAAE,oCAAc;YACtB,QAAQ,EAAE;gBAAC;oBACP,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,qCAAe;oBACrB,WAAW,EAAE,CAAC;oBACd,eAAe,EAAE;wBAAC,cAAc;qBAAC;iBACpC;aAAC;SACL;QACD,OAAO,EAAE;YACL,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE;gBACP,QAAQ,EAAE,CAAC;aACd;YACD,CAAC,EACA;gBACG,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,MAAM;gBACX,KAAK,EAAC;oBACH,QAAQ,EAAE,KAAK;iBACjB;aACJ;SACJ;KACJ,CAAC,CAAC;CACN;AAED,SAAS,iCAAW,GAAE;IAClB,0BAAI,CAAC,0BAAI,EAAE,MAAM,CAAC;IAClB,SAAS,GAAG,IAAI,KAAK,CAAC,+BAAS,EAAE;QAC7B,IAAI,EAAE,KAAK;QACX,IAAI,EAAE;YACF,MAAM,EAAE,oCAAc;YACtB,QAAQ,EAAE;gBAAC;oBACP,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,qCAAe;oBACrB,WAAW,EAAE,CAAC;oBACd,eAAe,EAAE;wBAAC,cAAc;qBAAC;iBACpC;aAAC;SACL;QACD,OAAO,EAAE;YACL,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE;gBACP,QAAQ,EAAE,CAAC;aACd;YACD,CAAC,EACA;gBACG,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,MAAM;gBACX,KAAK,EAAC;oBACH,QAAQ,EAAE,KAAK;iBACjB;aACJ;SACJ;KACJ,CAAC,CAAC;CACN,CAED,yCAAyC;CACzC;;;;;;;;;;;;;;;GAeG","sources":["node_modules/bintrees/lib/rbtree.js","node_modules/bintrees/lib/treebase.js","node_modules/bintrees/lib/bintree.js","src/js/script.js","node_modules/bintrees/index.js"],"sourcesContent":["\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n","\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n","//var BST = require('binarysearch-tree')\n//import BST from \"red-black-tree-js\"\nvar BST = require('bintrees').RBTree;\n//var WebSocket = require('ws')\n\n//variables\nws = new WebSocket('wss://futures.kraken.com/ws/v1')\nconst product_id = \"PI_ETHUSD\"\nlet chart;\nconst limit = 50;\nconst chartBids = document.getElementById('chartBids');\nconst chartAsks = document.getElementById('chartAsks');\n\nlet asks  = new BST(function(a, b) { return a.key - b.key; });\nlet bids  = new BST(function(a, b) { return a.key - b.key; });\n\n//connect \nws.onopen = () => {\n    console.log('Trade WS with Kraken connected')\n    \n    setTimeout(function(){\n        let request_messageTwo = {\n            \"event\": \"subscribe\",\n            \"feed\": 'book',\n            \"product_ids\": [product_id]\n        }\n        ws.send(JSON.stringify(request_messageTwo))\n        //console.log(JSON.stringify(request_messageTwo))\n    }, 3000);\n\n}\n\n//get messages\nws.onmessage = (message) => {\n    let data = JSON.parse(message.data)\n    //console.log(data)\n    //console.log(Object.keys(data))\n    //Object.keys(data)[4]\n    if (!data.event) {\n\n        if (Object.values(data)[0] == 'book_snapshot') {\n            let arrasks = Object.values(data)[6];\n            let arrbids = Object.values(data)[5];\n\n            arrasks.forEach((askitem) =>{\n                let price = parseFloat(Object.values(askitem)[0])\n                let vol = parseFloat(Object.values(askitem)[1])\n                asks.insert({key:price, value:vol})\n            })\n\n            arrbids.forEach((biditem) =>{\n                let price = parseFloat(Object.values(biditem)[0])\n                let vol = parseFloat(Object.values(biditem)[1])\n                bids.insert({key:price, value:vol})\n            })\n\n            console.log('Initialised Book');\n            //console.log(asks, bids);\n\n            if(!chart){\n                displayBids()\n                displayAsks()\n                console.log('charts disaplyed')\n            }\n\n        } else {\n            if(Object.values(data)[2] == 'sell' ) {\n               update_book(asks, 'ask', data);\n            }\n            if (Object.values(data)[2] == 'buy' ) {\n                update_book(bids, 'bid', data);\n            }\n        }\n    }\n}\n\n\n\n// Updating Orderbook\nfunction update_book (tree, side, data) {\n       \n    //console.log(data)\n    //delete entry if its volume is 0\n    //console.log(side, tree.find(parseFloat(Object.values(data)[4])), parseFloat(Object.values(data)[4]))\n\n    if(Object.values(data)[5] == 0){\n       tree.remove({key: parseFloat(Object.values(data)[4])}); \n    }else{\n        // add/update\n        //if node exits\n       let findkey = tree.find({key :parseFloat(Object.values(data)[4])})\n        if(findkey){\n            tree.remove({key: parseFloat(Object.values(data)[4])}); \n            tree.insert({key: parseFloat(Object.values(data)[4]), value:parseFloat(Object.values(data)[5])})\n        }else{\n            //if it doesnt exit then just insert it\n            tree.insert({key: parseFloat(Object.values(data)[4]), value:parseFloat(Object.values(data)[5])})\n        }\n\n        //console.log('updated');\n    }\n    \n    sort(tree, side)\n   \n    //console.log(price.slice(0,limit), volume.slice(0,limit))\n\n\n}\nlet price = []\nlet volume = []\nlet toDisplayPrice = []\nlet toDisaplyVolume = []\nfunction sort(tree, side){\n\n   // let arr = tree.toArrayPreOrder()\n    \n   \n    price.length = 0; \n    toDisplayPrice.length = 0;\n    volume.length = 0\n    toDisaplyVolume.length  = 0;\n    let max = 0;\n    if(side == 'ask'){\n        var it=tree.iterator(), item;\n        while((item = it.next()) !== null) {\n            price.push(item.key)\n            volume.push(item.value)\n            max++;\n            if(max == limit){\n                break;\n            }\n        }\n    }else{\n        var it=tree.iterator(), item;\n        while((item = it.prev()) !== null) {\n            price.push(item.key)\n            volume.push(item.value)\n            max++;\n            if(max == limit){\n                break;\n            }\n        }\n    }\n    //console.log(price, volume)\n\n    let start = price[0]; \n    toDisplayPrice.push(price[0]);\n    toDisaplyVolume.push(volume[0]);\n\n    for(let i = 1; i <= limit; i++ ){\n        if(side == 'ask'){\n            start = start + 0.05;\n        }\n        else{\n            start = start - 0.05;\n        }\n        \n        start = Math.floor(start * 100) / 100.0\n        let added = false\n        //console.log('helo')\n       /* if(start == price[i]){\n            toDisplayPrice.push(price[i]);\n            toDisaplyVolume.push(volume[i]);\n        }*/\n        for(let y=0; y <= price.length; y++){\n            if(start == price[y]){\n                toDisplayPrice.push(price[y]);\n                toDisaplyVolume.push(volume[y]);\n                added = true\n            }\n        }\n        if(!added){\n            toDisplayPrice.push(start);\n            toDisaplyVolume.push(0);\n        }\n    }\n    //console.log(toDisplayPrice, toDisaplyVolume)\n    if(side == 'bid') updateChartBids()                                      \n    else if(side == 'ask'){\n        //console.log(price, volume, toDisplayPrice, toDisaplyVolume)\n        updateChartAsks()\n    } \n}\n\nfunction updateChartBids(){\n    chartbids.data.labels = toDisplayPrice;\n    chartbids.data.datasets[0].data = toDisaplyVolume;\n    chartbids.update()\n    //console.log('update')\n}\nfunction updateChartAsks(){\n    chartasks.data.labels = toDisplayPrice;\n    chartasks.data.datasets[0].data = toDisaplyVolume;\n    chartasks.update()\n}\n\n\nfunction displayBids(){\n    sort(bids, 'bids')\n    chartbids = new Chart(chartBids, {\n        type: 'bar',\n        data: {\n            labels: toDisplayPrice,\n            datasets: [{\n                label: 'order size',\n                data: toDisaplyVolume,\n                borderWidth: 1,\n                backgroundColor: ['rgb(255,0,0)']\n            }]\n        },\n        options: {\n            normalized: true,\n            animation: {\n                duration: 0\n            },\n            y:\n             {\n                min: 0,\n                max: 200000,\n                ticks:{\n                   stepSize: 10000\n                }\n            },\n        }   \n    });\n}\n\nfunction displayAsks(){\n    sort(asks, 'asks')\n    chartasks = new Chart(chartAsks, {\n        type: 'bar',\n        data: {\n            labels: toDisplayPrice,\n            datasets: [{\n                label: 'order size',\n                data: toDisaplyVolume,\n                borderWidth: 1,\n                backgroundColor: ['rgb(0,255,0)']\n            }]\n        },\n        options: {\n            normalized: true,\n            animation: {\n                duration: 0\n            },\n            y:\n             {\n                min: 0,\n                max: 200000,\n                ticks:{\n                   stepSize: 10000\n                }\n            },\n        }   \n    });\n}\n\n//challenge function for private requests\n/*function signin_challenge(message){\n    \n    // step 1: hash the message with SHA256\n    var hash = CryptoJS.SHA256(message);\n\n    // step 2: base64 decode api secret key\n    const secret_buffer = CryptoJS.enc.Base64.parse(api_secret);\n\n    // step 3: use result of step 2 to hash the result of step 1 with HMAC-SHA512\n    const hmac = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA512, secret_buffer);\n    hmac.update(hash, secret_buffer);\n    \n    // step 4: Base64-encode the result of step 3\n    let result = hmac.finalize().toString(CryptoJS.enc.Base64);\n    return result;\n}*/\n","module.exports = {\n    RBTree: require('./lib/rbtree'),\n    BinTree: require('./lib/bintree')\n};\n"],"names":[],"version":3,"file":"index.e7c40e16.js.map"}